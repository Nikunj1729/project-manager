{"version":3,"sources":["config/firebaseConfig.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/index.js","store/createReduxStore.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","registerServiceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","initState","authError","authReducer","state","action","type","console","log","error","message","projects","projectReducer","project","rootReducer","combineReducers","auth","firebaseReducer","firestoreReducer","initialState","connect","dispatch","signOut","getState","getFirebase","then","catch","props","profile","className","to","href","onClick","initials","SignedOutLinks","links","uid","ProjectSummary","title","content","authorFirstName","authorLastName","ProjectList","map","id","key","Notifications","notifications","item","user","moment","time","toDate","fromNow","useFirestoreConnect","collection","limit","orderBy","projectsMap","useSelector","data","notificationsMap","Object","keys","match","params","createdAt","calendar","createProject","authorId","add","firstName","lastName","Date","toDateString","useState","setTitle","setContent","onSubmit","e","preventDefault","history","push","htmlFor","autoComplete","onChange","target","value","signIn","creds","credentials","signInWithEmailAndPassword","email","password","setPassword","setEmail","signUp","newUser","a","createUserWithEmailAndPassword","authResult","doc","set","setFirstName","setLastName","isEmpty","App","exact","path","component","Dashboard","ProjectDetail","SignIn","SignUp","CreateProject","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","isLoaded","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.48c3c0d3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyAHvNnCsKwQbTyzb1Xc75DmyUt6gScVyOk\",\n  authDomain: \"project-manager-6c4be.firebaseapp.com\",\n  databaseURL: \"https://project-manager-6c4be.firebaseio.com\",\n  projectId: \"project-manager-6c4be\",\n  storageBucket: \"project-manager-6c4be.appspot.com\",\n  messagingSenderId: \"484895120913\",\n  appId: \"1:484895120913:web:ba2dc174d9a9f51b265bb0\",\n  measurementId: \"G-55Y3DF3VQP\",\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore();\n\nexport default firebase;\n","const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      return {\n        ...state,\n        authError: \"Login failed\",\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login Success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"Signout Success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNOUT_ERROR\":\n      console.log(\"Signout failed\");\n      return {\n        ...state,\n        authError: \"Signout failed\",\n      };\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"Signup Success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"Signup failed\");\n      return {\n        ...state,\n        authError: action.error.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [],\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"Created Project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"Created Project Error\", action.error);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { getFirebase } from \"react-redux-firebase\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nexport default () => {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk.withExtraArgument(getFirebase))\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = (props) => {\n  const { profile, signOut } = props;\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a href=\"#\" onClick={signOut}>\n          Log out\n        </a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-2\">\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, getFirebase) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((error) => {\n        dispatch({ type: \"LOGIN_ERROR\", error });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, getFirebase) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      })\n      .catch((error) => {\n        dispatch({ type: \"SIGNOUT_ERROR\", error });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return async (dispatch, getState, getFirebase) => {\n    const firebase = getFirebase();\n    const firestore = getFirebase().firestore();\n    try {\n      const authResult = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(newUser.email, newUser.password);\n      firestore\n        .collection(\"users\")\n        .doc(authResult.user.uid)\n        .set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0],\n        })\n        .then(() => {\n          console.log(\"Created\");\n          dispatch({ type: \"SIGNUP_SUCCESS\" });\n        });\n    } catch (error) {\n      dispatch({ type: \"SIGNUP_ERROR\", error });\n    }\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Log in</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper sapphire\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          ProjectManager\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\n\nconst ProjectSummary = ({ project }) => {\n  const { title, content, authorFirstName, authorLastName } = project;\n  return (\n    <div className=\"card mercury z-depth-0 project-summary\">\n      <div className=\"card-content\">\n        <span className=\"card-title white-text text-darken-3\">{title}</span>\n        <p className=\"grey-text text-lighten-1\">\n          Posted by {authorFirstName} {authorLastName}\n        </p>\n        <p className=\"grey-text text-lighten-3\">{content}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectSummary from \"./ProjectSummary\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map((project) => (\n          <Link to={`project/${project.id}`} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = ({ notifications }) => {\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0 mercury notification-container\">\n        <div className=\"card-content\">\n          <span className=\"card-title white-text text-darken-3 \">\n            Notifications\n          </span>\n          <ul className=\"notifications grey-text lighten-5\">\n            {notifications.map((item) => {\n              return (\n                <li key={item.id}>\n                  <span className=\"blue-text lighten-1\">{item.user}</span>\n                  <span className=\"white-text\"> {item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport ProjectList from \"../projects/ProjectList\";\nimport Notifications from \"./Notifications\";\nimport { connect } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Dashboard = (props) => {\n  useFirestoreConnect([\n    {\n      collection: \"projects\",\n      limit: 6,\n      orderBy: [\"createdAt\", \"desc\"],\n    },\n    {\n      collection: \"notifications\",\n      limit: 3,\n      orderBy: [\"time\", \"desc\"],\n    },\n  ]);\n  const projectsMap = useSelector((state) => state.firestore.data.projects);\n  const notificationsMap = useSelector(\n    (state) => state.firestore.data.notifications\n  );\n  const { auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  if (!projectsMap) {\n    return null;\n  }\n  const projects = Object.keys(projectsMap).map((key) => {\n    return { ...projectsMap[key], id: key };\n  });\n  const notifications = notificationsMap\n    ? Object.keys(notificationsMap).map((key) => {\n        return { ...notificationsMap[key], id: key };\n      })\n    : [];\n  return (\n    <div className=\"dashboard container pt-80\">\n      <div className=\"row\">\n        <div className=\"col s12 m6\">\n          <ProjectList projects={projects} />\n        </div>\n        <div className=\"col s12 m5 offset-m1\">\n          <Notifications notifications={notifications} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React from \"react\";\nimport { useSelector, connect } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nfunction ProjectDetail(props) {\n  const { id } = props.match.params;\n  useFirestoreConnect([\"projects\"]);\n  const projectsMap = useSelector((state) => state.firestore.data.projects);\n  const { auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  if (!projectsMap) {\n    return null;\n  }\n  const project = projectsMap[id];\n  if (!project) {\n    return null;\n  }\n  const {\n    title,\n    content,\n    authorFirstName,\n    authorLastName,\n    createdAt,\n  } = project;\n  return (\n    <div className=\"container section project-detail pt-80\">\n      <div className=\"card mercury z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title white-text\">{title}</span>\n          <p className=\"card-detail grey-text lighten-5\">{content}</p>\n        </div>\n        <div className=\"card-action gret lighten-4 grey-text\">\n          <div>\n            Posted by {authorFirstName} {authorLastName}\n          </div>\n          <div>{moment(createdAt).calendar()}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectDetail);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { createProject } from \"../../store/actions/projectActions\";\n\nconst CreateProject = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const { auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.createProject({ title, content });\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container pt-80\">\n      <form onSubmit={handleSubmit} className=\"form mercury\">\n        <h5 className=\"white-text text-darken-3 padding-4\">Create Project</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            autoComplete=\"off\"\n            onChange={(e) => setTitle(e.target.value)}\n            className=\"white-text\"\n            value={title}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Content</label>\n          <textarea\n            type=\"text\"\n            id=\"content\"\n            autoComplete=\"off\"\n            onChange={(e) => setContent(e.target.value)}\n            className=\"white-text materialize-textarea\"\n            value={content}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn sapphire hover z-depth-0\">Create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n  return (dispatch, getState, getFirebase) => {\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    const firestore = getFirebase().firestore();\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date().toDateString(),\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch((error) => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", error });\n      });\n  };\n};\n","import React, { useState } from \"react\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst SignIn = (props) => {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.signIn({ email, password });\n  };\n  const { authError, auth } = props;\n\n  if (auth.uid) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"container pt-80\">\n      <form onSubmit={handleSubmit} className=\"form mercury\">\n        <h5 className=\"white-text text-darken-3 padding-4\">Sign In</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            autoComplete=\"off\"\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"white-text\"\n            value={email}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"white-text\"\n            value={password}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn sapphire hover z-depth-0\">Login</button>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { authError: state.auth.authError, auth: state.firebase.auth };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nconst SignUp = (props) => {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.signUp({ email, password, firstName, lastName });\n  };\n\n  const { auth, authError, profile } = props;\n\n  if (auth.uid && !profile.isEmpty) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"container pt-80\">\n      <form onSubmit={handleSubmit} className=\"form mercury\">\n        <h5 className=\"white-text text-darken-3 padding-4\">Sign Up</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            autoComplete=\"off\"\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"white-text\"\n            value={email}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"white-text\"\n            value={password}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            autoComplete=\"off\"\n            onChange={(e) => setFirstName(e.target.value)}\n            className=\"white-text\"\n            value={firstName}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            autoComplete=\"off\"\n            onChange={(e) => setLastName(e.target.value)}\n            className=\"white-text\"\n            value={lastName}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn sapphire hover z-depth-0\">Sign Up</button>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n    profile: state.firebase.profile,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetail from \"./components/projects/ProjectDetail\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App black\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetail} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider, useSelector } from \"react-redux\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, isLoaded } from \"react-redux-firebase\";\nimport firebase from \"./config/firebaseConfig\";\nimport createReduxStore from \"./store/createReduxStore\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst rrfConfig = { userProfile: \"users\", useFirestoreForProfile: true };\n\nconst store = createReduxStore();\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nconst AuthIsLoaded = ({ children }) => {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children;\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}